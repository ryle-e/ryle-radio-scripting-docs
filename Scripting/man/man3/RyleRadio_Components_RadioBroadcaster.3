.TH "RyleRadio.Components.RadioBroadcaster" 3 "Fri Oct 24 2025" "Version 1.0.0" "Ryle Radio" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RyleRadio.Components.RadioBroadcaster \- A "broadcaster" for a \fBRadioTrackWrapper\fP - the closer the \fBRadioOutput\fP that's playing the track is to a broadcaster (taking into consideration broadcast radius, power, etc), the louder the track is in the Output\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBRyleRadio\&.Components\&.Base\&.RadioComponentDataAccessor\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "float \fBGetPower\fP (Vector3 _receiverPos)"
.br
.RI "Gets the broadcast power of this particular broadcaster using the Output's position\&. "
.in -1c

Public Member Functions inherited from \fBRyleRadio\&.Components\&.Base\&.RadioComponentDataAccessor\fP
.in +1c
.ti -1c
.RI "override void \fBInit\fP ()"
.br
.RI "Initialises this component and links its affected tracks\&. "
.in -1c

Public Member Functions inherited from \fBRyleRadio\&.Components\&.Base\&.RadioComponent\fP
.in +1c
.ti -1c
.RI "void \fBInit\fP ()"
.br
.RI "Initialises this component\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "Vector2 \fBbroadcastRadius\fP"
.br
.RI "The inner and outer radii of this broadcaster\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "override void \fBAssignToTrack\fP (\fBRadioTrackWrapper\fP _track)"
.br
.RI "Links this broadcaster to a track\&. "
.ti -1c
.RI "override void \fBRemoveFromTrack\fP (\fBRadioTrackWrapper\fP _track)"
.br
.RI "Unlinks this broadcaster from a track\&. "
.in -1c

Protected Member Functions inherited from \fBRyleRadio\&.Components\&.Base\&.RadioComponentDataAccessor\fP
.in +1c
.ti -1c
.RI "void \fBAssignToTrack\fP (\fBRadioTrackWrapper\fP _track)"
.br
.RI "Links this component to a track\&. "
.ti -1c
.RI "void \fBRemoveFromTrack\fP (\fBRadioTrackWrapper\fP _track)"
.br
.RI "Unlinks this component from a track\&. "
.ti -1c
.RI "virtual void \fBAccessorInit\fP ()"
.br
.RI "Allows extra code for initialization so that \fBInit()\fP can still be called\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "Vector2 \fBbroadcastPowers\fP = new(0, 1)"
.br
.RI "The power of this broadcaster at the maximum and minimum radii\&. "
.ti -1c
.RI "AnimationCurve \fBdistanceFalloff\fP"
.br
.RI "The falloff curve between the inner and outer broadcast radii- the x-value is how far between the radii the Output is, and the y-value is how far between \fBbroadcastPowers\fP x and y the track's broadcast power is\&. "
.in -1c

Protected Attributes inherited from \fBRyleRadio\&.Components\&.Base\&.RadioComponent\fP
.in +1c
.ti -1c
.RI "\fBRadioData\fP \fBdata\fP"
.br
.RI "The \fBRadioData\fP (aka just radio) that this component is linked to\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "bool \fBShowApplyToAllOutputs\fP\fR [get]\fP"
.br
.RI "Shows \fBapplyToAllOutputsOutside\fP when the x-value of \fBbroadcastPowers\fP is greater than 0\&. "
.in -1c

Properties inherited from \fBRyleRadio\&.Components\&.Base\&.RadioComponentDataAccessor\fP
.in +1c
.ti -1c
.RI "List< string > \fBTrackNames\fP\fR [get]\fP"
.br
.RI "The list of tracks on the \fBRadioData\fP that this component can choose from\&. "
.ti -1c
.RI "Action< \fBRadioComponent\fP > \fBOnInit\fP = new(_ => { })\fR [get, set]\fP"
.br
.RI "Event called when the component is initialized\&. "
.in -1c

Properties inherited from \fBRyleRadio\&.Components\&.Base\&.RadioComponent\fP
.in +1c
.ti -1c
.RI "\fBRadioData\fP \fBData\fP\fR [get]\fP"
.br
.RI "Read-only accessor for \fBdata\fP\&. "
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBUpdate\fP ()"
.br
.RI "Updates the position of this broadcaster\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "bool \fBapplyToAllOutputsOutside\fP = false"
.br
.RI "If the x-value of \fBbroadcastPowers\fP should be applied to all Outputs outside of this broadcaster's radii- effectively makes it global\&. "
.ti -1c
.RI "Vector3 \fBcachedPos\fP"
.br
.RI "The position of the broadcaster in the previous frame- we can't access \fRtransform\&.position\fP in the audio thread, so we need to cache it in update\&. "
.in -1c
.SH "Detailed Description"
.PP 
A "broadcaster" for a \fBRadioTrackWrapper\fP - the closer the \fBRadioOutput\fP that's playing the track is to a broadcaster (taking into consideration broadcast radius, power, etc), the louder the track is in the Output\&. 

Somewhat similar to real world broadcasters- at least, that was the original intention :)

.PP
This has a custom editor in \fBRadioBroadcasterEditor\fP 
.PP
Definition at line \fB17\fP of file \fBRadioBroadcaster\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "override void RyleRadio\&.Components\&.RadioBroadcaster\&.AssignToTrack (\fBRadioTrackWrapper\fP _track)\fR [protected]\fP"

.PP
Links this broadcaster to a track\&. 
.PP
\fBParameters\fP
.RS 4
\fI_track\fP The track to link to
.RE
.PP

.PP
Definition at line \fB80\fP of file \fBRadioBroadcaster\&.cs\fP\&.
.SS "float RyleRadio\&.Components\&.RadioBroadcaster\&.GetPower (Vector3 _receiverPos)"

.PP
Gets the broadcast power of this particular broadcaster using the Output's position\&. 
.PP
\fBParameters\fP
.RS 4
\fI_receiverPos\fP The position of the Output
.RE
.PP
\fBReturns\fP
.RS 4
A value between 0 and 1, used as a multiplier to the loudness of a track
.RE
.PP

.PP
Definition at line \fB102\fP of file \fBRadioBroadcaster\&.cs\fP\&.
.PP
Referenced by \fBRyleRadio\&.Tracks\&.RadioTrackPlayer\&.GetBroadcastPower()\fP\&.
.SS "override void RyleRadio\&.Components\&.RadioBroadcaster\&.RemoveFromTrack (\fBRadioTrackWrapper\fP _track)\fR [protected]\fP"

.PP
Unlinks this broadcaster from a track\&. 
.PP
\fBParameters\fP
.RS 4
\fI_track\fP The track to unlink from
.RE
.PP

.PP
Definition at line \fB90\fP of file \fBRadioBroadcaster\&.cs\fP\&.
.SS "void RyleRadio\&.Components\&.RadioBroadcaster\&.Update ()\fR [private]\fP"

.PP
Updates the position of this broadcaster\&. 
.PP
Definition at line \fB70\fP of file \fBRadioBroadcaster\&.cs\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "bool RyleRadio\&.Components\&.RadioBroadcaster\&.applyToAllOutputsOutside = false\fR [private]\fP"

.PP
If the x-value of \fBbroadcastPowers\fP should be applied to all Outputs outside of this broadcaster's radii- effectively makes it global\&. 
.PP
Definition at line \fB54\fP of file \fBRadioBroadcaster\&.cs\fP\&.
.PP
Referenced by \fBGetPower()\fP\&.
.SS "Vector2 RyleRadio\&.Components\&.RadioBroadcaster\&.broadcastPowers = new(0, 1)\fR [protected]\fP"

.PP
The power of this broadcaster at the maximum and minimum radii\&. The x-value is the broadcast power right on the outer radius, and the y-value is the broadcast power within the inner radius\&. Broadcast power between the inner and outer radii will be somewhere in this range, defined by the \fBdistanceFalloff\fP

.PP
If the x-value is greater than 0, you might want to enable \fBapplyToAllOutputsOutside\fP so that all Outputs are affected by this broadcaster\&. 
.PP
Definition at line \fB39\fP of file \fBRadioBroadcaster\&.cs\fP\&.
.PP
Referenced by \fBGetPower()\fP\&.
.SS "Vector2 RyleRadio\&.Components\&.RadioBroadcaster\&.broadcastRadius"

.PP
The inner and outer radii of this broadcaster\&. \fIradiusProg is the x-value in the \fBdistanceFalloff\fP that we use to evaluate broadcast power\fP If the Output is within the inner radius, the radiusProg is 1\&. If the Output is between the inner and outer radii, the radiusProg is between 0 and 1\&. If the Output is outside both radii, the radiusProg is 0\&. 
.PP
Definition at line \fB28\fP of file \fBRadioBroadcaster\&.cs\fP\&.
.PP
Referenced by \fBGetPower()\fP\&.
.SS "Vector3 RyleRadio\&.Components\&.RadioBroadcaster\&.cachedPos\fR [private]\fP"

.PP
The position of the broadcaster in the previous frame- we can't access \fRtransform\&.position\fP in the audio thread, so we need to cache it in update\&. 
.PP
Definition at line \fB59\fP of file \fBRadioBroadcaster\&.cs\fP\&.
.PP
Referenced by \fBGetPower()\fP, and \fBUpdate()\fP\&.
.SS "AnimationCurve RyleRadio\&.Components\&.RadioBroadcaster\&.distanceFalloff\fR [protected]\fP"
\fBInitial value:\fP
.nf
= new(new Keyframe[2] {
            new(0, 1, 0, 0),
            new(1, 0, 0, 0)
        })
.PP
.fi

.PP
The falloff curve between the inner and outer broadcast radii- the x-value is how far between the radii the Output is, and the y-value is how far between \fBbroadcastPowers\fP x and y the track's broadcast power is\&. 
.PP
Definition at line \fB45\fP of file \fBRadioBroadcaster\&.cs\fP\&.
.PP
Referenced by \fBGetPower()\fP\&.
.SH "Property Documentation"
.PP 
.SS "bool RyleRadio\&.Components\&.RadioBroadcaster\&.ShowApplyToAllOutputs\fR [get]\fP, \fR [private]\fP"

.PP
Shows \fBapplyToAllOutputsOutside\fP when the x-value of \fBbroadcastPowers\fP is greater than 0\&. 
.PP
Definition at line \fB64\fP of file \fBRadioBroadcaster\&.cs\fP\&.
.PP
Referenced by \fBGetPower()\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Ryle Radio from the source code\&.
