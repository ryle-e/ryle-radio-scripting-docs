<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer" kind="class" language="C#" prot="public">
    <compoundname>RyleRadio::Components::RadioObserver</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MonoBehaviour</basecompoundref>
    <innerclass refid="dd/d3f/class_ryle_radio_1_1_components_1_1_radio_observer_1_1_observer_event" prot="public">RyleRadio::Components::RadioObserver::ObserverEvent</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a7c36b405481c6e9460645aa9b0418582" prot="public" static="no" strong="yes">
        <type></type>
        <name>EventType</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.EventType</qualifiedname>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a7c36b405481c6e9460645aa9b0418582a4c1a5c5891c13b2e68ec26994b08bc14" prot="public">
          <name>OutputVolume</name>
          <briefdescription>
<para>The volume of the track: tune power * broadcast power * insulation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a7c36b405481c6e9460645aa9b0418582a35d72fa7d84f4ae67d705373d1d44b88" prot="public">
          <name>Gain</name>
          <briefdescription>
<para>The gain of the track: this is currently defined exclusively in the track&apos;s gain variable. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a7c36b405481c6e9460645aa9b0418582a2c7cc15fb1e8401b0c054fc415c66be2" prot="public">
          <name>TunePower</name>
          <briefdescription>
<para>The tune power of the track: how close the <ref refid="d2/d2d/class_ryle_radio_1_1_components_1_1_radio_output_1a5c32b26c33a527186043184bb4c8ec20" kindref="member">RadioOutput.Tune</ref> value is to the range of the track. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a7c36b405481c6e9460645aa9b0418582a9c5156561aae5c21f53ad13034f6e1fd" prot="public">
          <name>BroadcastPower</name>
          <briefdescription>
<para>The broadcast power of the track: how close to any active RadioBroadcasters the output&apos;s transform is. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a7c36b405481c6e9460645aa9b0418582aac49d4d549aa6409857531a4d093d1df" prot="public">
          <name>Insulation</name>
          <briefdescription>
<para>The insulation of the track: the higher the value the less insulation- the power of any <ref refid="de/def/class_ryle_radio_1_1_components_1_1_radio_insulator" kindref="compound">RadioInsulator</ref> the output is inside of. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a7c36b405481c6e9460645aa9b0418582a76b9817b7b0d6397d04ab9dd7a22d6bf" prot="public">
          <name>TrackEnds</name>
          <briefdescription>
<para>The track ends, or loops- this is a Trigger event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a7c36b405481c6e9460645aa9b0418582ab6000982d6da8560c9c7ab95efed3f4b" prot="public">
          <name>TrackStarts</name>
          <briefdescription>
<para>The track starts, or loops (happens after TrackEnds)- this is a Trigger event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a7c36b405481c6e9460645aa9b0418582a774d19c914fce2e5fcbdfcb9481aedf0" prot="public">
          <name>OutputTune</name>
          <briefdescription>
<para>The tune on the <ref refid="d2/d2d/class_ryle_radio_1_1_components_1_1_radio_output" kindref="compound">RadioOutput</ref> is changed. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a7c36b405481c6e9460645aa9b0418582a6adf97f83acf6453d4a6a4b1070f3754" prot="public">
          <name>None</name>
          <briefdescription>
<para>Empty, mainly to temporarily disable an event without deleting it. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The event an observer is looking for. </para>
        </briefdescription>
        <detaileddescription>
<para>Except for Trigger events, we need a value(s) to check for a change with. E.g: checking if volume is above a threshold. Trigger events wait for a certain thing to happen that doesn&apos;t need a value. E.g: checking if a track has just started playing </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="28" column="15" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="29" bodyend="40"/>
      </memberdef>
      <memberdef kind="enum" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1adedd1d6ce5d8cf86977d7187ca74cfd7" prot="public" static="no" strong="yes">
        <type></type>
        <name>ComparisonType</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.ComparisonType</qualifiedname>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1adedd1d6ce5d8cf86977d7187ca74cfd7af5f286e73bda105e538310b3190f75c5" prot="public">
          <name>Equal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1adedd1d6ce5d8cf86977d7187ca74cfd7af6d044fe1f01fb0c956b80099e2a3072" prot="public">
          <name>GreaterThan</name>
          <briefdescription>
<para>The value is equal to a number. </para>
          </briefdescription>
          <detaileddescription>
<para>We&apos;re using floats for almost every <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a7c36b405481c6e9460645aa9b0418582" kindref="member">EventType</ref> with a value, so this won&apos;t be used often</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1adedd1d6ce5d8cf86977d7187ca74cfd7a25c44812e9d75f685d2a0b815dea1ebe" prot="public">
          <name>GreaterThanOrEqual</name>
          <briefdescription>
<para>The value is greater than a number. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1adedd1d6ce5d8cf86977d7187ca74cfd7ac6d9d7bb9939f62f01c80f8b1251501c" prot="public">
          <name>LessThan</name>
          <briefdescription>
<para>The value is greater than or equal to a number. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1adedd1d6ce5d8cf86977d7187ca74cfd7a4ab671acbbaacb0db7d8477cfe4f4e0b" prot="public">
          <name>LessThanOrEqual</name>
          <briefdescription>
<para>The value is less than a number. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1adedd1d6ce5d8cf86977d7187ca74cfd7adc69d8c6291bae10413401baf17f5589" prot="public">
          <name>BetweenInclusive</name>
          <briefdescription>
<para>The value is less than or equal to a number. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1adedd1d6ce5d8cf86977d7187ca74cfd7a420f6965ca553e6bff717bdd49373fcc" prot="public">
          <name>BetweenExclusive</name>
          <briefdescription>
<para>The value is between numbers x and y, including if it&apos;s equal to x or y. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The method of comparisonType used for an event. For example, checking if the volume is greater than a number, or in a certain range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="45" column="15" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="46" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a20e98887f8846c29e4f0155c36bf4c66" prot="private" static="no" mutable="no">
        <type><ref refid="d2/d2d/class_ryle_radio_1_1_components_1_1_radio_output" kindref="compound">RadioOutput</ref></type>
        <definition>RadioOutput RyleRadio.Components.RadioObserver.output</definition>
        <argsstring></argsstring>
        <name>output</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.output</qualifiedname>
        <briefdescription>
<para>The <ref refid="d2/d2d/class_ryle_radio_1_1_components_1_1_radio_output" kindref="compound">RadioOutput</ref> this observer is attached to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="59" column="30" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="59" bodyend="-1"/>
        <referencedby refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1ab6c602f2a4cbcf49a14ebdf644fac793" compoundref="da/d11/_radio_observer_8cs" startline="119" endline="123">RyleRadio.Components.RadioObserver.Awake</referencedby>
        <referencedby refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a5cf3400db9f76f6dac74444a693bfa4e" compoundref="da/d11/_radio_observer_8cs" startline="128" endline="131">RyleRadio.Components.RadioObserver.OnDestroy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a4230b55ced5082f104e1dadd7f225737" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int RyleRadio.Components.RadioObserver.affectedTracks</definition>
        <argsstring></argsstring>
        <name>affectedTracks</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.affectedTracks</qualifiedname>
        <briefdescription>
<para>The tracks that this observer is watching for events on. This is a flag int and is translated to a list of names in <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a79a7484b93704449f8b9691f13a25bc5" kindref="member">AffectedTracks</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="65" column="21" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a0886bd8a2912dd7f6be8ba2f42ac6b1c" prot="private" static="no" mutable="no">
        <type>List&lt; <ref refid="dd/d3f/class_ryle_radio_1_1_components_1_1_radio_observer_1_1_observer_event" kindref="compound">ObserverEvent</ref> &gt;</type>
        <definition>List&lt;ObserverEvent&gt; RyleRadio.Components.RadioObserver.events</definition>
        <argsstring></argsstring>
        <name>events</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.events</qualifiedname>
        <briefdescription>
<para>The events that this Observer responds uses, containing values/triggers to watch for and events to call. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="70" column="23" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="70" bodyend="-1"/>
        <referencedby refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a9be9fb66df9434dd8a2c0117255a1787" compoundref="da/d11/_radio_observer_8cs" startline="166" endline="224">RyleRadio.Components.RadioObserver.AssignEvents</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1afbedeb396a11124c15f3f8dc67f0c9b4" prot="private" static="no" mutable="no">
        <type>List&lt; Action &gt;</type>
        <definition>List&lt;Action&gt; RyleRadio.Components.RadioObserver.toDoOnUpdate</definition>
        <argsstring></argsstring>
        <name>toDoOnUpdate</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.toDoOnUpdate</qualifiedname>
        <initializer>= new()</initializer>
        <briefdescription>
<para>A buffer for events to run on Update. We cannot call UnityEvents in the audio thread, so we need a buffer here so we can run them in <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1af96f1100853e1768cb363ec4aafe116d" kindref="member">Update</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>See also: </bold><ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1aff4fedc113a7a5670bbefe68bb33e62d" kindref="member">stayedEvents</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="79" column="22" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="79" bodyend="-1"/>
        <referencedby refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a1a767f69b2219c279f0f1431d558ebbd" compoundref="da/d11/_radio_observer_8cs" startline="294" endline="299">RyleRadio.Components.RadioObserver.TriggerEvent</referencedby>
        <referencedby refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1af96f1100853e1768cb363ec4aafe116d" compoundref="da/d11/_radio_observer_8cs" startline="136" endline="160">RyleRadio.Components.RadioObserver.Update</referencedby>
        <referencedby refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1acd2af3c4da2389d18d35280c8e580d94" compoundref="da/d11/_radio_observer_8cs" startline="235" endline="286">RyleRadio.Components.RadioObserver.ValueEvent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1aff4fedc113a7a5670bbefe68bb33e62d" prot="private" static="no" mutable="no">
        <type>List&lt; <ref refid="dd/d3f/class_ryle_radio_1_1_components_1_1_radio_observer_1_1_observer_event" kindref="compound">ObserverEvent</ref> &gt;</type>
        <definition>List&lt;ObserverEvent&gt; RyleRadio.Components.RadioObserver.stayedEvents</definition>
        <argsstring></argsstring>
        <name>stayedEvents</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.stayedEvents</qualifiedname>
        <initializer>= new()</initializer>
        <briefdescription>
<para>A tracker for which ObserverEvents have been called for this specific frame- prevents us from calling an OnStay event hundreds of times in a frame due to the audio thread being WAY faster. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>See also:</bold> <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1afbedeb396a11124c15f3f8dc67f0c9b4" kindref="member">toDoOnUpdate</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="86" column="22" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="86" bodyend="-1"/>
        <referencedby refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a9be9fb66df9434dd8a2c0117255a1787" compoundref="da/d11/_radio_observer_8cs" startline="166" endline="224">RyleRadio.Components.RadioObserver.AssignEvents</referencedby>
        <referencedby refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1af96f1100853e1768cb363ec4aafe116d" compoundref="da/d11/_radio_observer_8cs" startline="136" endline="160">RyleRadio.Components.RadioObserver.Update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a289de6dde811ce51a1207e5db4d95f96" prot="private" static="no" mutable="no">
        <type>string[]</type>
        <definition>string [] RyleRadio.Components.RadioObserver.affectedTrackNames</definition>
        <argsstring></argsstring>
        <name>affectedTrackNames</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.affectedTrackNames</qualifiedname>
        <briefdescription>
<para><ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a4230b55ced5082f104e1dadd7f225737" kindref="member">affectedTracks</ref> as a list of names rather than a flag int. Created and cached in <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a79a7484b93704449f8b9691f13a25bc5" kindref="member">AffectedTracks</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="97" column="24" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="97" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a79a7484b93704449f8b9691f13a25bc5" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>string[]</type>
        <definition>string [] RyleRadio.Components.RadioObserver.AffectedTracks</definition>
        <argsstring></argsstring>
        <name>AffectedTracks</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.AffectedTracks</qualifiedname>
        <briefdescription>
<para>The tracks selected on this Observer. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an accessor for <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a289de6dde811ce51a1207e5db4d95f96" kindref="member">affectedTrackNames</ref> and <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a4230b55ced5082f104e1dadd7f225737" kindref="member">affectedTracks</ref> - uses MultiselectAttribute.To to automatically convert the flag int to a string array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="104" column="23" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="105" bodyend="113"/>
        <referencedby refid="d2/d2d/class_ryle_radio_1_1_components_1_1_radio_output_1ad2d125d8048b92240e3d066fc6f1fbcd" compoundref="d4/d40/_radio_output_8cs" startline="158" endline="194">RyleRadio.Components.RadioOutput.PlayerCreation</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1ab6c602f2a4cbcf49a14ebdf644fac793" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RyleRadio.Components.RadioObserver.Awake</definition>
        <argsstring>()</argsstring>
        <name>Awake</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.Awake</qualifiedname>
        <briefdescription>
<para>Attaches the Observer to <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a20e98887f8846c29e4f0155c36bf4c66" kindref="member">output</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="119" column="22" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a5cf3400db9f76f6dac74444a693bfa4e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RyleRadio.Components.RadioObserver.OnDestroy</definition>
        <argsstring>()</argsstring>
        <name>OnDestroy</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.OnDestroy</qualifiedname>
        <briefdescription>
<para>Detaches this Observer from <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a20e98887f8846c29e4f0155c36bf4c66" kindref="member">output</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="128" column="22" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1af96f1100853e1768cb363ec4aafe116d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RyleRadio.Components.RadioObserver.Update</definition>
        <argsstring>()</argsstring>
        <name>Update</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.Update</qualifiedname>
        <briefdescription>
<para>Run the buffered events and reset for the next frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="136" column="22" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="136" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1acd2af3c4da2389d18d35280c8e580d94" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RyleRadio.Components.RadioObserver.ValueEvent</definition>
        <argsstring>(ObserverEvent _event, float _value)</argsstring>
        <name>ValueEvent</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.ValueEvent</qualifiedname>
        <param>
          <type><ref refid="dd/d3f/class_ryle_radio_1_1_components_1_1_radio_observer_1_1_observer_event" kindref="compound">ObserverEvent</ref></type>
          <declname>_event</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
<para>A generic method letting an <ref refid="dd/d3f/class_ryle_radio_1_1_components_1_1_radio_observer_1_1_observer_event" kindref="compound">ObserverEvent</ref> tracking a value watch for its change. </para>
        </briefdescription>
        <detaileddescription>
<para>This is what&apos;s called every time a Track&apos;s observed value is changed. If the new value fulfills the given <ref refid="dd/d3f/class_ryle_radio_1_1_components_1_1_radio_observer_1_1_observer_event" kindref="compound">ObserverEvent</ref>, it&apos;ll be called. E.g: volume is in given range- call event</para>
<para><bold>See also: <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a1a767f69b2219c279f0f1431d558ebbd" kindref="member">TriggerEvent()</ref></bold></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the change we&apos;re watching for, and the event to call when the change happens</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The observed value right now</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="235" column="22" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="235" bodyend="286"/>
        <referencedby refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a9be9fb66df9434dd8a2c0117255a1787" compoundref="da/d11/_radio_observer_8cs" startline="166" endline="224">RyleRadio.Components.RadioObserver.AssignEvents</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a1a767f69b2219c279f0f1431d558ebbd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RyleRadio.Components.RadioObserver.TriggerEvent</definition>
        <argsstring>(ObserverEvent _event)</argsstring>
        <name>TriggerEvent</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.TriggerEvent</qualifiedname>
        <param>
          <type><ref refid="dd/d3f/class_ryle_radio_1_1_components_1_1_radio_observer_1_1_observer_event" kindref="compound">ObserverEvent</ref></type>
          <declname>_event</declname>
        </param>
        <briefdescription>
<para>A generic method tracking if an <ref refid="dd/d3f/class_ryle_radio_1_1_components_1_1_radio_observer_1_1_observer_event" kindref="compound">ObserverEvent</ref>&apos;s trigger has been called. E.g: a track has just started playing, call event. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>See also: </bold> <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1acd2af3c4da2389d18d35280c8e580d94" kindref="member">ValueEvent()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_event</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the trigger we&apos;re watching for, and the event to call when it&apos;s triggered</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="294" column="22" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="294" bodyend="299"/>
        <referencedby refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a9be9fb66df9434dd8a2c0117255a1787" compoundref="da/d11/_radio_observer_8cs" startline="166" endline="224">RyleRadio.Components.RadioObserver.AssignEvents</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a9be9fb66df9434dd8a2c0117255a1787" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RyleRadio.Components.RadioObserver.AssignEvents</definition>
        <argsstring>(RadioTrackPlayer _player)</argsstring>
        <name>AssignEvents</name>
        <qualifiedname>RyleRadio.Components.RadioObserver.AssignEvents</qualifiedname>
        <param>
          <type><ref refid="da/da4/class_ryle_radio_1_1_tracks_1_1_radio_track_player" kindref="compound">RadioTrackPlayer</ref></type>
          <declname>_player</declname>
        </param>
        <briefdescription>
<para>Assigns each event to a <ref refid="da/da4/class_ryle_radio_1_1_tracks_1_1_radio_track_player" kindref="compound">RadioTrackPlayer</ref> for one of our <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a79a7484b93704449f8b9691f13a25bc5" kindref="member">AffectedTracks</ref>. This is called when a new <ref refid="da/da4/class_ryle_radio_1_1_tracks_1_1_radio_track_player" kindref="compound">RadioTrackPlayer</ref> is created that&apos;s playing a Track in <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a79a7484b93704449f8b9691f13a25bc5" kindref="member">AffectedTracks</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_player</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="da/da4/class_ryle_radio_1_1_tracks_1_1_radio_track_player" kindref="compound">RadioTrackPlayer</ref> playing one of our <ref refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a79a7484b93704449f8b9691f13a25bc5" kindref="member">AffectedTracks</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" line="166" column="21" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/RadioObserver.cs" bodystart="166" bodyend="224"/>
        <referencedby refid="d2/d2d/class_ryle_radio_1_1_components_1_1_radio_output_1ad2d125d8048b92240e3d066fc6f1fbcd" compoundref="d4/d40/_radio_output_8cs" startline="158" endline="194">RyleRadio.Components.RadioOutput.PlayerCreation</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A component used to watch for specific happenings on a <ref refid="d2/d2d/class_ryle_radio_1_1_components_1_1_radio_output" kindref="compound">RadioOutput</ref>, e.g: a clip being a certain volume, a track starting, the tune being in a certain range<linebreak/>
We don&apos;t inherit from RadioComponent here since we don&apos;t need to use a <ref refid="da/dc0/class_ryle_radio_1_1_radio_data" kindref="compound">RadioData</ref> ref, but it&apos;s very similar. </para>
    </briefdescription>
    <detaileddescription>
<para>One major thing to notice about this class is that each individual Observer component has specific tracks it&apos;s watching for- NOT each individual <ref refid="dd/d3f/class_ryle_radio_1_1_components_1_1_radio_observer_1_1_observer_event" kindref="compound">ObserverEvent</ref>. This is due to limitations of MultiselectAttribute- it doesn&apos;t display in nested lists properly. This is theoretically something I can fix, but I&apos;m not fantastic at custom editors so I&apos;d prefer to accept this limitation for now. With that being said, this means it <emphasis>is</emphasis> a bit cleaner to navigate multiple Observers in the scene- not all bad! </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>MonoBehaviour</label>
      </node>
      <node id="1">
        <label>RyleRadio.Components.RadioObserver</label>
        <link refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>MonoBehaviour</label>
      </node>
      <node id="1">
        <label>RyleRadio.Components.RadioObserver</label>
        <link refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>output</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>RyleRadio.Components.Base.RadioComponent</label>
        <link refid="d2/d82/class_ryle_radio_1_1_components_1_1_base_1_1_radio_component"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>RyleRadio.Components.RadioOutput</label>
        <link refid="d2/d2d/class_ryle_radio_1_1_components_1_1_radio_output"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>RyleRadio.RadioData</label>
        <link refid="da/dc0/class_ryle_radio_1_1_radio_data"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>ScriptableObject</label>
      </node>
    </collaborationgraph>
    <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/ObserverEvent.cs" line="9" column="19" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Components/ObserverEvent.cs" bodystart="10" bodyend="159"/>
    <listofallmembers>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a289de6dde811ce51a1207e5db4d95f96" prot="private" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>affectedTrackNames</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a79a7484b93704449f8b9691f13a25bc5" prot="public" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>AffectedTracks</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a4230b55ced5082f104e1dadd7f225737" prot="private" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>affectedTracks</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a9be9fb66df9434dd8a2c0117255a1787" prot="public" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>AssignEvents</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1ab6c602f2a4cbcf49a14ebdf644fac793" prot="private" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>Awake</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1adedd1d6ce5d8cf86977d7187ca74cfd7" prot="public" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>ComparisonType</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a0886bd8a2912dd7f6be8ba2f42ac6b1c" prot="private" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>events</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a7c36b405481c6e9460645aa9b0418582" prot="public" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>EventType</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a5cf3400db9f76f6dac74444a693bfa4e" prot="private" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>OnDestroy</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a20e98887f8846c29e4f0155c36bf4c66" prot="private" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>output</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1aff4fedc113a7a5670bbefe68bb33e62d" prot="private" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>stayedEvents</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1afbedeb396a11124c15f3f8dc67f0c9b4" prot="private" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>toDoOnUpdate</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1a1a767f69b2219c279f0f1431d558ebbd" prot="private" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>TriggerEvent</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1af96f1100853e1768cb363ec4aafe116d" prot="private" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>Update</name></member>
      <member refid="d1/d58/class_ryle_radio_1_1_components_1_1_radio_observer_1acd2af3c4da2389d18d35280c8e580d94" prot="private" virt="non-virtual"><scope>RyleRadio::Components::RadioObserver</scope><name>ValueEvent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
