<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track" kind="class" language="C#" prot="public">
    <compoundname>RyleRadio::Tracks::StationRadioTrack</compoundname>
    <basecompoundref refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track" prot="public" virt="non-virtual">RyleRadio.Tracks.RadioTrack</basecompoundref>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1aec7a9e25b5afaaddef97b1517ba0d361" prot="public" static="yes" mutable="no">
        <type>const string</type>
        <definition>const string RyleRadio.Tracks.StationRadioTrack.DISPLAY_NAME</definition>
        <argsstring></argsstring>
        <name>DISPLAY_NAME</name>
        <qualifiedname>RyleRadio.Tracks.StationRadioTrack.DISPLAY_NAME</qualifiedname>
        <initializer>= &quot;Station aka Multi-select&quot;</initializer>
        <briefdescription>
<para>The display name of this track in the editor. Required by <ref refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track" kindref="compound">RadioTrack</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" line="21" column="29" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" bodystart="21" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a9c325018c6641f7f483127889959ccd4" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool RyleRadio.Tracks.StationRadioTrack.randomSequence</definition>
        <argsstring></argsstring>
        <name>randomSequence</name>
        <qualifiedname>RyleRadio.Tracks.StationRadioTrack.randomSequence</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
<para>Whether or not this station plays in a random or semi-random order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" line="26" column="21" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" bodystart="26" bodyend="-1"/>
        <referencedby refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1afedd66f27883a83686668ea3786504f5" compoundref="db/d75/_station_radio_track_8cs" startline="124" endline="185">RyleRadio.Tracks.StationRadioTrack.NextTrack</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a0c00f4dc7e31b6de324b8e406aac62f2" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RyleRadio.Tracks.StationRadioTrack.thresholdBeforeRepeats</definition>
        <argsstring></argsstring>
        <name>thresholdBeforeRepeats</name>
        <qualifiedname>RyleRadio.Tracks.StationRadioTrack.thresholdBeforeRepeats</qualifiedname>
        <briefdescription>
<para>When <ref refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a9c325018c6641f7f483127889959ccd4" kindref="member">randomSequence</ref> is true, this is the number of other tracks that need to be played before the same one is chosen again. Stops the same track from playing back-to-back, and forces variety in the track order. </para>
        </briefdescription>
        <detaileddescription>
<para>The number of tracks to be played before one can be played again is <computeroutput>round_down( (track_count - 1) * threshold )</computeroutput>. <linebreak/>
i.e with four tracks and a threshold of 0.5f, <computeroutput>round_down((4 - 1 == 3) * 0.5) == 1</computeroutput>: one other track will need to be played before a repeat <linebreak/>
i.e with four tracks and a threshold of 0.7f, <computeroutput>round_down((4 - 1 == 3) * 0.7) == 2</computeroutput>: two other tracks will need to be played before a repeat <linebreak/>
i.e with four tracks and a threshold of 1f, <computeroutput>round_down((4 - 1 == 3) * 1) == 3</computeroutput>: three other tracks (all other tracks) will need to be played before a repeat <linebreak/>
i.e with eleven tracks and a threshold of 0.8f, <computeroutput>round_down((11 - 1 == 10) * 0.8f == 8</computeroutput>: eight other tracks will need to be played before a repeat <emphasis>Do note that if this is set to 1, the tracks are forced to play in the same randomized sequence repeatedly</emphasis> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" line="38" column="22" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" bodystart="38" bodyend="-1"/>
        <referencedby refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1afedd66f27883a83686668ea3786504f5" compoundref="db/d75/_station_radio_track_8cs" startline="124" endline="185">RyleRadio.Tracks.StationRadioTrack.NextTrack</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1ab9992c3d9eaa3024e96a0ecc53b5b5b2" prot="public" static="no" mutable="no">
        <type>List&lt; <ref refid="de/d38/class_ryle_radio_1_1_tracks_1_1_station_radio_track_wrapper" kindref="compound">StationRadioTrackWrapper</ref> &gt;</type>
        <definition>List&lt;StationRadioTrackWrapper&gt; RyleRadio.Tracks.StationRadioTrack.stationTrackWs</definition>
        <argsstring></argsstring>
        <name>stationTrackWs</name>
        <qualifiedname>RyleRadio.Tracks.StationRadioTrack.stationTrackWs</qualifiedname>
        <briefdescription>
<para>The tracks contained within this station. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" line="43" column="21" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" bodystart="43" bodyend="-1"/>
        <referencedby refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a79ad6625c291fcf2857ee880f6d70610" compoundref="db/d75/_station_radio_track_8cs" startline="80" endline="96">RyleRadio.Tracks.StationRadioTrack.Init</referencedby>
        <referencedby refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1afedd66f27883a83686668ea3786504f5" compoundref="db/d75/_station_radio_track_8cs" startline="124" endline="185">RyleRadio.Tracks.StationRadioTrack.NextTrack</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1ab28772fad82afd2449c73bcf1a1c643d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int RyleRadio.Tracks.StationRadioTrack.currentTrackIndex</definition>
        <argsstring></argsstring>
        <name>currentTrackIndex</name>
        <qualifiedname>RyleRadio.Tracks.StationRadioTrack.currentTrackIndex</qualifiedname>
        <briefdescription>
<para>The index of the contained track that&apos;s currently playing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" line="48" column="21" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" bodystart="48" bodyend="-1"/>
        <referencedby refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a79ad6625c291fcf2857ee880f6d70610" compoundref="db/d75/_station_radio_track_8cs" startline="80" endline="96">RyleRadio.Tracks.StationRadioTrack.Init</referencedby>
        <referencedby refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1afedd66f27883a83686668ea3786504f5" compoundref="db/d75/_station_radio_track_8cs" startline="124" endline="185">RyleRadio.Tracks.StationRadioTrack.NextTrack</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a68f7d080e44965f4fa8b2fb489cf96d4" prot="private" static="no" mutable="no">
        <type>int[]</type>
        <definition>int [] RyleRadio.Tracks.StationRadioTrack.remainingTracksBeforeRepeat</definition>
        <argsstring></argsstring>
        <name>remainingTracksBeforeRepeat</name>
        <qualifiedname>RyleRadio.Tracks.StationRadioTrack.remainingTracksBeforeRepeat</qualifiedname>
        <briefdescription>
<para>The number of plays that need to happen before each track can be played again. Follows the layout described in <ref refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a0c00f4dc7e31b6de324b8e406aac62f2" kindref="member">thresholdBeforeRepeats</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>i.e if tracks A, B and C are being randomly chosen with a <ref refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a0c00f4dc7e31b6de324b8e406aac62f2" kindref="member">thresholdBeforeRepeats</ref> of 0.5f, they each need to have 1 other track play before each can repeat (see comments above thresholdBeforeRepeats) <linebreak/>
So if track A was just played after B and C, this array would look like [1, 0, -1]. That is, track A needs another track to be played once before it can be repeated, B doesn&apos;t need any other tracks to play and thus can be repeated, and same for C <linebreak/>
<emphasis>(a number below 0 is treated as 0 for this system)</emphasis><linebreak/>
<linebreak/>
 <bold>See:</bold> <ref refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1afedd66f27883a83686668ea3786504f5" kindref="member">NextTrack()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" line="64" column="21" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" bodystart="64" bodyend="-1"/>
        <referencedby refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a79ad6625c291fcf2857ee880f6d70610" compoundref="db/d75/_station_radio_track_8cs" startline="80" endline="96">RyleRadio.Tracks.StationRadioTrack.Init</referencedby>
        <referencedby refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1afedd66f27883a83686668ea3786504f5" compoundref="db/d75/_station_radio_track_8cs" startline="124" endline="185">RyleRadio.Tracks.StationRadioTrack.NextTrack</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a1e3ff626739a9a98cc08cbaed6d43c98" prot="private" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="de/d38/class_ryle_radio_1_1_tracks_1_1_station_radio_track_wrapper" kindref="compound">StationRadioTrackWrapper</ref></type>
        <definition>StationRadioTrackWrapper RyleRadio.Tracks.StationRadioTrack.CurrentTrackW</definition>
        <argsstring></argsstring>
        <name>CurrentTrackW</name>
        <qualifiedname>RyleRadio.Tracks.StationRadioTrack.CurrentTrackW</qualifiedname>
        <briefdescription>
<para>A reference to the track that&apos;s currently playing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" line="74" column="42" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" bodystart="74" bodyend="-1"/>
        <referencedby refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a2d64ffc17fd27c339dac115733da1ed1" compoundref="db/d75/_station_radio_track_8cs" startline="114" endline="119">RyleRadio.Tracks.StationRadioTrack.GetSample</referencedby>
        <referencedby refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1afedd66f27883a83686668ea3786504f5" compoundref="db/d75/_station_radio_track_8cs" startline="124" endline="185">RyleRadio.Tracks.StationRadioTrack.NextTrack</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a79ad6625c291fcf2857ee880f6d70610" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override void</type>
        <definition>override void RyleRadio.Tracks.StationRadioTrack.Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <qualifiedname>RyleRadio.Tracks.StationRadioTrack.Init</qualifiedname>
        <reimplements refid="d3/df2/interface_ryle_radio_1_1_tracks_1_1_i_radio_track_1a5be3ac4abb6bf515b54341c39d2aa417">Init</reimplements>
        <briefdescription>
<para>Initializes this station and all contained tracks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" line="80" column="30" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" bodystart="80" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a827fb0f9f2d67ad7d48cb0a9dfbe5c18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override void</type>
        <definition>override void RyleRadio.Tracks.StationRadioTrack.AddToPlayerEndCallback</definition>
        <argsstring>(ref Action&lt; RadioTrackPlayer &gt; _callback)</argsstring>
        <name>AddToPlayerEndCallback</name>
        <qualifiedname>RyleRadio.Tracks.StationRadioTrack.AddToPlayerEndCallback</qualifiedname>
        <reimplements refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track_1a702fda25cec925c0c3e7f8bf5eacfd47">AddToPlayerEndCallback</reimplements>
        <param>
          <type>ref Action&lt; <ref refid="da/da4/class_ryle_radio_1_1_tracks_1_1_radio_track_player" kindref="compound">RadioTrackPlayer</ref> &gt;</type>
          <declname>_callback</declname>
        </param>
        <briefdescription>
<para>When a <ref refid="da/da4/class_ryle_radio_1_1_tracks_1_1_radio_track_player" kindref="compound">RadioTrackPlayer</ref> for this station finishes the track we&apos;ve given it, we update it to use whatever the next track chosen is. This method is called when the Player finishes, so we update it here. This works because the Player only gets destroyed if it&apos;s a one-shot- in which case only one track from the station will be playing anyway. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback invoked when the <ref refid="da/da4/class_ryle_radio_1_1_tracks_1_1_radio_track_player" kindref="compound">RadioTrackPlayer</ref> ends</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" line="103" column="30" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a2d64ffc17fd27c339dac115733da1ed1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override float</type>
        <definition>override float RyleRadio.Tracks.StationRadioTrack.GetSample</definition>
        <argsstring>(int _sampleIndex)</argsstring>
        <name>GetSample</name>
        <qualifiedname>RyleRadio.Tracks.StationRadioTrack.GetSample</qualifiedname>
        <reimplements refid="d3/df2/interface_ryle_radio_1_1_tracks_1_1_i_radio_track_1a53788b5811f9cb2463da7185ba9ccf33">GetSample</reimplements>
        <param>
          <type>int</type>
          <declname>_sampleIndex</declname>
        </param>
        <briefdescription>
<para>Gets a sample from the currently playing track. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_sampleIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the sample</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A sample from <ref refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a1e3ff626739a9a98cc08cbaed6d43c98" kindref="member">CurrentTrackW</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" line="114" column="31" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" bodystart="114" bodyend="119"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1afedd66f27883a83686668ea3786504f5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RyleRadio.Tracks.StationRadioTrack.NextTrack</definition>
        <argsstring>()</argsstring>
        <name>NextTrack</name>
        <qualifiedname>RyleRadio.Tracks.StationRadioTrack.NextTrack</qualifiedname>
        <briefdescription>
<para>Selects the next track for this station to play. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" line="124" column="22" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" bodystart="124" bodyend="185"/>
        <referencedby refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a827fb0f9f2d67ad7d48cb0a9dfbe5c18" compoundref="db/d75/_station_radio_track_8cs" startline="103" endline="107">RyleRadio.Tracks.StationRadioTrack.AddToPlayerEndCallback</referencedby>
        <referencedby refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a79ad6625c291fcf2857ee880f6d70610" compoundref="db/d75/_station_radio_track_8cs" startline="80" endline="96">RyleRadio.Tracks.StationRadioTrack.Init</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A eventType of <ref refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track" kindref="compound">RadioTrack</ref> that contains other tracks. Has a custom editor in StationRadioTrackEditor<linebreak/>
 This is meant to emulate an actual radio station by storing multiple different tracks and switching between them as it plays. It can be used for really any purpose that calls for switching tracks, though- e.g: &apos;&apos;&apos;&apos;procedural&apos;&apos;&apos;&apos; music, complex ambience, easter eggs (kinda) </para>
    </briefdescription>
    <detaileddescription>
<para>Also uses <ref refid="de/d38/class_ryle_radio_1_1_tracks_1_1_station_radio_track_wrapper" kindref="compound">StationRadioTrackWrapper</ref> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>RyleRadio.Tracks.StationRadioTrack</label>
        <link refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>RyleRadio.Tracks.IRadioTrack</label>
        <link refid="d3/df2/interface_ryle_radio_1_1_tracks_1_1_i_radio_track"/>
      </node>
      <node id="2">
        <label>RyleRadio.Tracks.RadioTrack</label>
        <link refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>RyleRadio.Tracks.StationRadioTrack</label>
        <link refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>RyleRadio.Tracks.IRadioTrack</label>
        <link refid="d3/df2/interface_ryle_radio_1_1_tracks_1_1_i_radio_track"/>
      </node>
      <node id="2">
        <label>RyleRadio.Tracks.RadioTrack</label>
        <link refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" line="16" column="11" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/StationRadioTrack.cs" bodystart="17" bodyend="186"/>
    <listofallmembers>
      <member refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a827fb0f9f2d67ad7d48cb0a9dfbe5c18" prot="public" virt="virtual"><scope>RyleRadio::Tracks::StationRadioTrack</scope><name>AddToPlayerEndCallback</name></member>
      <member refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1ab28772fad82afd2449c73bcf1a1c643d" prot="private" virt="non-virtual"><scope>RyleRadio::Tracks::StationRadioTrack</scope><name>currentTrackIndex</name></member>
      <member refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a1e3ff626739a9a98cc08cbaed6d43c98" prot="private" virt="non-virtual"><scope>RyleRadio::Tracks::StationRadioTrack</scope><name>CurrentTrackW</name></member>
      <member refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1aec7a9e25b5afaaddef97b1517ba0d361" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::StationRadioTrack</scope><name>DISPLAY_NAME</name></member>
      <member refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a2d64ffc17fd27c339dac115733da1ed1" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::StationRadioTrack</scope><name>GetSample</name></member>
      <member refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a79ad6625c291fcf2857ee880f6d70610" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::StationRadioTrack</scope><name>Init</name></member>
      <member refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1afedd66f27883a83686668ea3786504f5" prot="private" virt="non-virtual"><scope>RyleRadio::Tracks::StationRadioTrack</scope><name>NextTrack</name></member>
      <member refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a9c325018c6641f7f483127889959ccd4" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::StationRadioTrack</scope><name>randomSequence</name></member>
      <member refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a68f7d080e44965f4fa8b2fb489cf96d4" prot="private" virt="non-virtual"><scope>RyleRadio::Tracks::StationRadioTrack</scope><name>remainingTracksBeforeRepeat</name></member>
      <member refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track_1ab9bc3ce18b760fcfd3ae4867ded40698" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::StationRadioTrack</scope><name>SampleCount</name></member>
      <member refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track_1a3bc4c9f7923a9314dffdd21f41723941" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::StationRadioTrack</scope><name>SampleRate</name></member>
      <member refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1ab9992c3d9eaa3024e96a0ecc53b5b5b2" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::StationRadioTrack</scope><name>stationTrackWs</name></member>
      <member refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track_1a0c00f4dc7e31b6de324b8e406aac62f2" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::StationRadioTrack</scope><name>thresholdBeforeRepeats</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
