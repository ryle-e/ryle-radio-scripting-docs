<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track" kind="class" language="C#" prot="public">
    <compoundname>RyleRadio::Tracks::ProceduralRadioTrack</compoundname>
    <basecompoundref refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track" prot="public" virt="non-virtual">RyleRadio.Tracks.RadioTrack</basecompoundref>
    <basecompoundref refid="dc/d36/interface_ryle_radio_1_1_tracks_1_1_i_station_track" prot="public" virt="non-virtual">RyleRadio.Tracks.IStationTrack</basecompoundref>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a875d0aa43f7a037896786dd2f223c6b3" prot="public" static="no" strong="yes">
        <type></type>
        <name>ProceduralType</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.ProceduralType</qualifiedname>
        <enumvalue id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a875d0aa43f7a037896786dd2f223c6b3aad81a11fa6c9e7cb884c4c5e9d39f0da" prot="public">
          <name>WhiteNoise</name>
          <briefdescription>
<para>White noise: random samples between 0 and 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a875d0aa43f7a037896786dd2f223c6b3a38cdfe1ca463b28f853b4cb2140d0fb8" prot="public">
          <name>PinkNoise</name>
          <briefdescription>
<para>Special eventType of noise defined by Paul Kellet&apos;s refined method (pk3): sounds &quot;fuller&quot; than white noise. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a875d0aa43f7a037896786dd2f223c6b3a6842953f56972d1802aeb60dec83cd94" prot="public">
          <name>BrownNoise</name>
          <briefdescription>
<para>Special eventType of noise using a value (<ref refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a2f55f1e9b9cc531f14e2c06f7a5b7998" kindref="member">brownWalkPower</ref>): sounds softer and deeper. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a875d0aa43f7a037896786dd2f223c6b3a8bf2116522afa754f97dea7634116564" prot="public">
          <name>SineWave</name>
          <briefdescription>
<para>A waveform: shaped as a sine wave at a given frequency. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a875d0aa43f7a037896786dd2f223c6b3a880a7ef20988e107cb918e73bd969bd1" prot="public">
          <name>Silence</name>
          <briefdescription>
<para>Silence: samples at 0. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The eventType of procedural audio this track is generating. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="21" column="15" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="22" bodyend="28"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1aff4713f204f1d974cd7d5fb3ed763394" prot="public" static="yes" mutable="no">
        <type>const string</type>
        <definition>const string RyleRadio.Tracks.ProceduralRadioTrack.DISPLAY_NAME</definition>
        <argsstring></argsstring>
        <name>DISPLAY_NAME</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.DISPLAY_NAME</qualifiedname>
        <initializer>= &quot;Procedural&quot;</initializer>
        <briefdescription>
<para>The name of this class in the editor- required by <ref refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track" kindref="compound">RadioTrack</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="16" column="29" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="16" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a434bffdbfd2ef9af32d3f72a0b568c72" prot="private" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float RyleRadio.Tracks.ProceduralRadioTrack.NOISE_MULTIPLIER</definition>
        <argsstring></argsstring>
        <name>NOISE_MULTIPLIER</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.NOISE_MULTIPLIER</qualifiedname>
        <initializer>= .2f</initializer>
        <briefdescription>
<para>A base multiplier for noise- because the samples can go all the way up to 1, noise tends to be a lot louder than other tracks, e.g: AudioClips in <ref refid="de/d66/class_ryle_radio_1_1_tracks_1_1_clip_radio_track" kindref="compound">ClipRadioTrack</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="30" column="29" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="30" bodyend="-1"/>
        <referencedby refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a383442f843004ce3898509ecc8e4bab5" compoundref="de/d9e/_procedural_radio_track_8cs" startline="103" endline="162">RyleRadio.Tracks.ProceduralRadioTrack.GetSample</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1af26081ed87f3ae3d96f8b179aee39b54" prot="private" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float RyleRadio.Tracks.ProceduralRadioTrack.PINK_MULTIPLIER</definition>
        <argsstring></argsstring>
        <name>PINK_MULTIPLIER</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.PINK_MULTIPLIER</qualifiedname>
        <initializer>= .5f</initializer>
        <briefdescription>
<para>Pink noise is even louder than the other noise types, so we curb it a little. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="31" column="29" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="31" bodyend="-1"/>
        <referencedby refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a383442f843004ce3898509ecc8e4bab5" compoundref="de/d9e/_procedural_radio_track_8cs" startline="103" endline="162">RyleRadio.Tracks.ProceduralRadioTrack.GetSample</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a51558907afb31032aaeebf27b2360ecd" prot="private" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float RyleRadio.Tracks.ProceduralRadioTrack.BASE_SAMPLE_RATE</definition>
        <argsstring></argsstring>
        <name>BASE_SAMPLE_RATE</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.BASE_SAMPLE_RATE</qualifiedname>
        <initializer>= 44100</initializer>
        <briefdescription>
<para>The default sample rate for the procedural tracks, can adjust this if required. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="32" column="29" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="32" bodyend="-1"/>
        <referencedby refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a49f57378ad34e028e3ae6f9bf652c154" compoundref="de/d9e/_procedural_radio_track_8cs" startline="88" endline="96">RyleRadio.Tracks.ProceduralRadioTrack.Init</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a5481dc232eea6f3128b0665bc658ac7b" prot="public" static="no" mutable="no">
        <type><ref refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a875d0aa43f7a037896786dd2f223c6b3" kindref="member">ProceduralType</ref></type>
        <definition>ProceduralType RyleRadio.Tracks.ProceduralRadioTrack.proceduralType</definition>
        <argsstring></argsstring>
        <name>proceduralType</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.proceduralType</qualifiedname>
        <initializer>= <ref refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a875d0aa43f7a037896786dd2f223c6b3aad81a11fa6c9e7cb884c4c5e9d39f0da" kindref="member">ProceduralType.WhiteNoise</ref></initializer>
        <briefdescription>
<para>The selected eventType of noise for this track. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="37" column="31" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="37" bodyend="-1"/>
        <referencedby refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a383442f843004ce3898509ecc8e4bab5" compoundref="de/d9e/_procedural_radio_track_8cs" startline="103" endline="162">RyleRadio.Tracks.ProceduralRadioTrack.GetSample</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a3fd80112352b4996a78634016a0b0c4a" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RyleRadio.Tracks.ProceduralRadioTrack.duration</definition>
        <argsstring></argsstring>
        <name>duration</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.duration</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>If this track is inside of a <ref refid="d9/da4/class_ryle_radio_1_1_tracks_1_1_station_radio_track" kindref="compound">StationRadioTrack</ref>, then it should only play for a certain duration- this is that duration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="43" column="22" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="43" bodyend="-1"/>
        <referencedby refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a49f57378ad34e028e3ae6f9bf652c154" compoundref="de/d9e/_procedural_radio_track_8cs" startline="88" endline="96">RyleRadio.Tracks.ProceduralRadioTrack.Init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a947a0cd5b897659b62e96322153045a0" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RyleRadio.Tracks.ProceduralRadioTrack.waveFrequency</definition>
        <argsstring></argsstring>
        <name>waveFrequency</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.waveFrequency</qualifiedname>
        <initializer>= 100</initializer>
        <briefdescription>
<para>The frequency/pitch of the waveform. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="49" column="22" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="49" bodyend="-1"/>
        <referencedby refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a383442f843004ce3898509ecc8e4bab5" compoundref="de/d9e/_procedural_radio_track_8cs" startline="103" endline="162">RyleRadio.Tracks.ProceduralRadioTrack.GetSample</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a2f55f1e9b9cc531f14e2c06f7a5b7998" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float RyleRadio.Tracks.ProceduralRadioTrack.brownWalkPower</definition>
        <argsstring></argsstring>
        <name>brownWalkPower</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.brownWalkPower</qualifiedname>
        <initializer>= 0.5f</initializer>
        <briefdescription>
<para>The value used to define the sound of brown noise.<linebreak/>
<linebreak/>
 Brown noise works by adding the generated sample to all previous generated samples. This float is what these generated samples are multiplied by when stored. This means that the higher the walk power, the larger the difference that each sample makes on average, and the closer it sounds to white noise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="57" column="22" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="57" bodyend="-1"/>
        <referencedby refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a383442f843004ce3898509ecc8e4bab5" compoundref="de/d9e/_procedural_radio_track_8cs" startline="103" endline="162">RyleRadio.Tracks.ProceduralRadioTrack.GetSample</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a4016f69a5ae84b80181379d85920cb9a" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float RyleRadio.Tracks.ProceduralRadioTrack.phase</definition>
        <argsstring></argsstring>
        <name>phase</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.phase</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The progress of the waveform used when generating it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="67" column="23" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="67" bodyend="-1"/>
        <referencedby refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a383442f843004ce3898509ecc8e4bab5" compoundref="de/d9e/_procedural_radio_track_8cs" startline="103" endline="162">RyleRadio.Tracks.ProceduralRadioTrack.GetSample</referencedby>
        <referencedby refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a49f57378ad34e028e3ae6f9bf652c154" compoundref="de/d9e/_procedural_radio_track_8cs" startline="88" endline="96">RyleRadio.Tracks.ProceduralRadioTrack.Init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a6cc0c26e63118f80da3d49e826ef5334" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float RyleRadio.Tracks.ProceduralRadioTrack.lastBrown</definition>
        <argsstring></argsstring>
        <name>lastBrown</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.lastBrown</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The generated brown noise from the previous sample. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="77" column="23" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="77" bodyend="-1"/>
        <referencedby refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a383442f843004ce3898509ecc8e4bab5" compoundref="de/d9e/_procedural_radio_track_8cs" startline="103" endline="162">RyleRadio.Tracks.ProceduralRadioTrack.GetSample</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1ae8a1338da49edef807a0baf69aaa8f51" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool RyleRadio.Tracks.ProceduralRadioTrack.IsInStation</definition>
        <argsstring></argsstring>
        <name>IsInStation</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.IsInStation</qualifiedname>
        <reimplements refid="dc/d36/interface_ryle_radio_1_1_tracks_1_1_i_station_track_1a494288d59288c18ba985d7b9a7e9fc50">IsInStation</reimplements>
        <briefdescription>
<para>Whether this is in a station or not. Required by <ref refid="dc/d36/interface_ryle_radio_1_1_tracks_1_1_i_station_track" kindref="compound">IStationTrack</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="82" column="21" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="82" bodyend="82"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a49f57378ad34e028e3ae6f9bf652c154" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override void</type>
        <definition>override void RyleRadio.Tracks.ProceduralRadioTrack.Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.Init</qualifiedname>
        <reimplements refid="d3/df2/interface_ryle_radio_1_1_tracks_1_1_i_radio_track_1a5be3ac4abb6bf515b54341c39d2aa417">Init</reimplements>
        <briefdescription>
<para>Initializes this track. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="88" column="30" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="88" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a383442f843004ce3898509ecc8e4bab5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override float</type>
        <definition>override float RyleRadio.Tracks.ProceduralRadioTrack.GetSample</definition>
        <argsstring>(int _sampleIndex)</argsstring>
        <name>GetSample</name>
        <qualifiedname>RyleRadio.Tracks.ProceduralRadioTrack.GetSample</qualifiedname>
        <reimplements refid="d3/df2/interface_ryle_radio_1_1_tracks_1_1_i_radio_track_1a53788b5811f9cb2463da7185ba9ccf33">GetSample</reimplements>
        <param>
          <type>int</type>
          <declname>_sampleIndex</declname>
        </param>
        <briefdescription>
<para>Get the next sample of the selected procedural audio eventType. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_sampleIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the sample- useless for noise, useful for waveforms</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sample of generated audio</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="103" column="31" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="103" bodyend="162"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A <ref refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track" kindref="compound">RadioTrack</ref> that plays procedurally generated audio, such as noice, silence, and waveforms. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>RyleRadio.Tracks.ProceduralRadioTrack</label>
        <link refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>RyleRadio.Tracks.IRadioTrack</label>
        <link refid="d3/df2/interface_ryle_radio_1_1_tracks_1_1_i_radio_track"/>
      </node>
      <node id="4">
        <label>RyleRadio.Tracks.IStationTrack</label>
        <link refid="dc/d36/interface_ryle_radio_1_1_tracks_1_1_i_station_track"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RyleRadio.Tracks.RadioTrack</label>
        <link refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>RyleRadio.Tracks.ProceduralRadioTrack</label>
        <link refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>RyleRadio.Tracks.IRadioTrack</label>
        <link refid="d3/df2/interface_ryle_radio_1_1_tracks_1_1_i_radio_track"/>
      </node>
      <node id="4">
        <label>RyleRadio.Tracks.IStationTrack</label>
        <link refid="dc/d36/interface_ryle_radio_1_1_tracks_1_1_i_station_track"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RyleRadio.Tracks.RadioTrack</label>
        <link refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" line="11" column="11" bodyfile="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/Track Types/ProceduralRadioTrack.cs" bodystart="12" bodyend="165"/>
    <listofallmembers>
      <member refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track_1a702fda25cec925c0c3e7f8bf5eacfd47" prot="public" virt="virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>AddToPlayerEndCallback</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a51558907afb31032aaeebf27b2360ecd" prot="private" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>BASE_SAMPLE_RATE</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a2f55f1e9b9cc531f14e2c06f7a5b7998" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>brownWalkPower</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1aff4713f204f1d974cd7d5fb3ed763394" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>DISPLAY_NAME</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a3fd80112352b4996a78634016a0b0c4a" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>duration</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a383442f843004ce3898509ecc8e4bab5" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>GetSample</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a49f57378ad34e028e3ae6f9bf652c154" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>Init</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1ae8a1338da49edef807a0baf69aaa8f51" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>IsInStation</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a6cc0c26e63118f80da3d49e826ef5334" prot="private" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>lastBrown</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a434bffdbfd2ef9af32d3f72a0b568c72" prot="private" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>NOISE_MULTIPLIER</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a4016f69a5ae84b80181379d85920cb9a" prot="private" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>phase</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1af26081ed87f3ae3d96f8b179aee39b54" prot="private" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>PINK_MULTIPLIER</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a875d0aa43f7a037896786dd2f223c6b3" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>ProceduralType</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a5481dc232eea6f3128b0665bc658ac7b" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>proceduralType</name></member>
      <member refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track_1ab9bc3ce18b760fcfd3ae4867ded40698" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>SampleCount</name></member>
      <member refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track_1a3bc4c9f7923a9314dffdd21f41723941" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>SampleRate</name></member>
      <member refid="d8/df8/class_ryle_radio_1_1_tracks_1_1_procedural_radio_track_1a947a0cd5b897659b62e96322153045a0" prot="public" virt="non-virtual"><scope>RyleRadio::Tracks::ProceduralRadioTrack</scope><name>waveFrequency</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
